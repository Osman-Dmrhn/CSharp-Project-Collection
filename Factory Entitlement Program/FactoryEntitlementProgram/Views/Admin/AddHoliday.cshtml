@model FactoryEntitlementProgram.Models.Holiday
@using Newtonsoft.Json

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Tatil Günü Ekle";
}

<h2>Tatil Günü Ekle</h2>

<div id="calendar" class="mb-4"></div>

<form asp-action="AddHoliday" method="post" class="mt-3">
    @Html.AntiForgeryToken()
    <div class="mb-3">
        <label class="form-label">Tarih</label>
        <input asp-for="Date" type="date" class="form-control" id="holidayDate" />
    </div>
    <div class="mb-3">
        <label class="form-label">Açıklama</label>
        <input asp-for="Description" class="form-control" />
    </div>
    <button type="submit" class="btn btn-success">Ekle</button>
</form>

<div class="mt-3">
    <button class="btn btn-primary me-2" id="markSaturdays">Tüm Cumartesileri Ekle</button>
    <button class="btn btn-primary" id="markSundays">Tüm Pazarları Ekle</button>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css">
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/locales/tr.global.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarEl = document.getElementById('calendar');
            const dateInput = document.getElementById('holidayDate');
            const holidays = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Holidays));
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            const events = holidays.map(h => ({
                title: h.title,
                start: h.start,
                color: h.color || 'black',
                textColor: 'white'
            }));

            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'tr',
                height: 550,
                selectable: true,
                events: events,
                dateClick: function (info) {
                    dateInput.value = info.dateStr;
                },
                eventClick: function (info) {
                    if (confirm(`"${info.event.title}" tatilini kaldırmak istiyor musunuz?`)) {
                        const dateStr = info.event.startStr;

                        // Takvimden kaldır
                        info.event.remove();

                        // Backend'e kaldırma isteği gönder
                        fetch('/Admin/DeleteHoliday', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': token
                            },
                            body: JSON.stringify({ date: dateStr })
                        })
                            .then(response => {
                                if (!response.ok) {
                                    alert('Tatil kaldırılırken bir hata oluştu.');
                                }
                            })
                            .catch(() => {
                                alert('Sunucuya bağlanılamadı.');
                            });
                    }
                }
            });

            calendar.render();

            function addWeekendEvents(dayNumber, title) {
                const view = calendar.view;
                const start = new Date(view.currentStart);
                const end = new Date(view.currentEnd);
                const holidaysToAdd = [];

                for (let t = new Date(start); t < end; t.setDate(t.getDate() + 1)) {
                    const d = new Date(t.getFullYear(), t.getMonth(), t.getDate()); // referans kopya

                    if (d.getDay() === dayNumber) {
                        d.setHours(12); // UTC sapması çözümü
                        const dateStr = d.toISOString().split("T")[0];

                        const exists = calendar.getEvents().some(e => e.startStr === dateStr);
                        if (!exists) {
                            calendar.addEvent({
                                start: dateStr,
                                title: title,
                                color: 'red',
                                textColor: 'white'
                            });

                            holidaysToAdd.push({
                                date: dateStr,
                                description: title
                            });
                        }
                    }
                }

                if (holidaysToAdd.length > 0) {
                    fetch('/Admin/AddMultipleHolidays', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify(holidaysToAdd)
                    });
                }
            }

            document.getElementById('markSaturdays').addEventListener('click', function () {
                addWeekendEvents(6, 'Cumartesi Tatili');
            });

            document.getElementById('markSundays').addEventListener('click', function () {
                addWeekendEvents(0, 'Pazar Tatili');
            });
        });
    </script>
}
